AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Stack to create a mini network with public and private EC2 instances, subnets, security groups, and a jump box for secure access, along with all essential networking components.
 
Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC

  PublicSubnetCidr:
    Type: String 
    Default: 10.0.1.0/24
    Description: CIDR block for the public subnet

  JumpboxSubnetCidr:
    Type: String
    Default: 10.0.2.0/24
    Description: CIDR block for the jumpbox subnet

  PrivateSubnetCidr:
    Type: String
    Default: 10.0.3.0/24
    Description: CIDR block for the private subnet

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: My VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Route Table

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  JumpboxSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref JumpboxSubnet
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2a
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet

  JumpboxSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2b
      CidrBlock: !Ref JumpboxSubnetCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Jumpbox Subnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2c
      CidrBlock: !Ref PrivateSubnetCidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private Subnet

  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Public Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  JumpboxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Jumpbox Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Private Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref JumpboxSecurityGroup
      VpcId: !Ref VPC

  PublicEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-07c5ecd8498c59db5
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet: 
            - !Ref PublicSecurityGroup
          SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: Public EC2 Instance

  JumpboxEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-07c5ecd8498c59db5
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - !Ref JumpboxSecurityGroup
          SubnetId: !Ref JumpboxSubnet
      Tags:
        - Key: Name
          Value: Jumpbox EC2 Instance

  PrivateEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-07c5ecd8498c59db5
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeviceIndex: "0"
          GroupSet:
            - !Ref PrivateSecurityGroup
          SubnetId: !Ref PrivateSubnet
      Tags:
        - Key: Name
          Value: Private EC2 Instance

#Mentioning Outputs for my Stack
Outputs:

  PublicInstanceID:
    Description: The Instance ID of the Public EC2 Instance
    Value: !Ref PublicEC2Instance
 
  PrivateInstanceID:
    Description: The Instance ID of the Private EC2 Instance
    Value: !Ref PrivateEC2Instance
 
  PublicInstancePublicIP:
    Description: The Public IP of the Public EC2 Instance
    Value: !GetAtt PublicEC2Instance.PublicIp
 
  PrivateSubnetID:
    Description: The Subnet ID of the Private Subnet
    Value: !Ref PrivateSubnet
 
  PublicSubnetID:
    Description: The Subnet ID of the Public Subnet
    Value: !Ref PublicSubnet
           
